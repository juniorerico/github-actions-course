name: On Merge Queue (merge_group)

on:
  pull_request:
  merge_group:

permissions:
  contents: read
  pull-requests: read

jobs:
  print-pr-info:
    name: Print PR info
    runs-on: ubuntu-latest
    steps:
      - name: Show merge_group context
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "Repository: ${{ github.repository }}"
          echo "Actor: ${{ github.actor }}"
          echo "Ref: ${{ github.ref }}"
          echo "SHA: ${{ github.sha }}"
          echo "Merge group head SHA: ${{ github.event.merge_group.head_sha }}"
          echo "Merge group base ref: ${{ github.event.merge_group.base_ref }}"
          echo "Merge group head ref: ${{ github.event.merge_group.head_ref }}"
          echo "Number of PRs in group: ${{ github.event.merge_group.pull_requests && fromJson(toJson(github.event.merge_group.pull_requests)).length || 0 }}"

      - name: Print first PR basic info (if available)
        if: ${{ github.event.merge_group.pull_requests && fromJson(toJson(github.event.merge_group.pull_requests)).length > 0 }}
        env:
          PR_JSON: ${{ toJson(github.event.merge_group.pull_requests[0]) }}
        run: |
          echo "$PR_JSON" | jq .
          echo "PR Number: $(echo "$PR_JSON" | jq -r '.number')"
          echo "PR Title: $(echo "$PR_JSON" | jq -r '.title')"
          echo "PR Author: $(echo "$PR_JSON" | jq -r '.user.login')"
          echo "PR Head: $(echo "$PR_JSON" | jq -r '.head.ref')"
          echo "PR Base: $(echo "$PR_JSON" | jq -r '.base.ref')"

      - name: Fetch PR details via REST (fallback)
        if: ${{ !github.event.merge_group.pull_requests || fromJson(toJson(github.event.merge_group.pull_requests)).length == 0 }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "No pull_requests array in event payload. Attempting to infer from head/base refs."
          echo "Head ref: ${{ github.event.merge_group.head_ref }}"
          echo "Base ref: ${{ github.event.merge_group.base_ref }}"
          # Try to list PRs targeting the base branch and print the most recent
          PRS=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls?state=open&base=${{ github.event.merge_group.base_ref }}")
          echo "$PRS" | jq '.[0] | {number,title,user:.user.login,head:.head.ref,base:.base.ref,html_url}'

  fail-job:
    name: Always fail (block merge for testing)
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'merge_group' }}
    needs: [print-pr-info]
    steps:
      - name: Intentionally fail
        run: |
          echo "This job is designed to fail to prevent the PR from merging (testing)."
          exit 1


